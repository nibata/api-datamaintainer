"""tabla grande

Revision ID: 55c1dbef406d
Revises: 230429b7a20a
Create Date: 2023-08-13 13:07:03.564919

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel
from faker import Faker
from faker.providers import DynamicProvider
from datetime import datetime

product_provider = DynamicProvider(provider_name="product", elements=["Product 1", "Product 2", "Product 3"])
movement_type_provider = DynamicProvider(provider_name="movement_type", elements=["Sell", "Buy"])

fake = Faker()
fake.add_provider(product_provider)
fake.add_provider(movement_type_provider)


# revision identifiers, used by Alembic.
revision = '55c1dbef406d'
down_revision = '230429b7a20a'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('CREATE SCHEMA IF NOT EXISTS "Stock"')
    table_produc_moves = op.create_table('ProductMoves',
    sa.Column('Product', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('TypeMovement', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('QuantityUnits', sa.Integer(), nullable=False),
    sa.Column('TimeAt', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('Id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('Id'),
    schema='Stock')
    # ### end Alembic commands ###

    data = []
    for i in range(0, 10000):
        data.append({"Product": fake.product(),
                     "TypeMovement": fake.movement_type(),
                     "QuantityUnits": fake.pyint(min_value=1, max_value=15),
                     "TimeAt": fake.date_time_between(start_date=datetime(2000,1,1,0,0,0),
                                                      end_date=datetime(2024,1,1,0,0,0))
                     })

    op.bulk_insert(table_produc_moves, data)


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('ProductMoves', schema='Stock')
    op.execute('DROP SCHEMA IF EXISTS "Stock"')
    # ### end Alembic commands ###
