"""se crea relacion con grupos

Revision ID: 06dd01cd7d16
Revises: eca9ccfab936
Create Date: 2023-03-18 18:26:17.081632

"""
from alembic import op
import sqlalchemy as sa
from datamantainer_app.configs.settings import USER_ADMIN


# revision identifiers, used by Alembic.
revision = '06dd01cd7d16'
down_revision = 'eca9ccfab936'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    group_table = op.create_table('groups',
                                  sa.Column('id', sa.Integer(), nullable=False),
                                  sa.Column('code', sa.String(), nullable=True),
                                  sa.Column('description', sa.String(), nullable=True),
                                  sa.PrimaryKeyConstraint('id'),
                                  schema='authentication')

    op.create_index(op.f('ix_authentication_groups_description'), 'groups', ['description'], unique=True, schema='authentication')
    op.create_index(op.f('ix_authentication_groups_id'), 'groups', ['id'], unique=False, schema='authentication')
    
    op.create_table('users_groups',
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('group_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['group_id'], ['authentication.groups.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['authentication.users.id'], ),
                    sa.PrimaryKeyConstraint('user_id', 'group_id'),
                    schema='authentication')

    # ### end Alembic commands ###

    # Deafult roles
    admin_code = "ADMINISTRATOR"
    select_code = "SELECT"
    insert_code = "INSERT"
    roles = [{"code": admin_code, "description": "Administrator privileges role"},
             {"code": select_code, "description": "Basic select role"},
             {"code": insert_code, "description": "Basic insert role"},]
    
    op.bulk_insert(group_table,
                   roles)
    
    
    
    op.execute(f"""INSERT INTO authentication.users_groups(user_id, group_id) 
                   VALUES ((SELECT id FROM authentication.users WHERE email = '{USER_ADMIN}'),
                           (SELECT id FROM authentication.groups WHERE code = '{admin_code}')),
                           ((SELECT id FROM authentication.users WHERE email = '{USER_ADMIN}'),
                           (SELECT id FROM authentication.groups WHERE code = '{select_code}')),
                           ((SELECT id FROM authentication.users WHERE email = '{USER_ADMIN}'),
                           (SELECT id FROM authentication.groups WHERE code = '{insert_code}'))""")


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users_groups', schema='authentication')
    op.drop_index(op.f('ix_authentication_groups_id'), table_name='groups', schema='authentication')
    op.drop_index(op.f('ix_authentication_groups_description'), table_name='groups', schema='authentication')
    op.drop_table('groups', schema='authentication')
    # ### end Alembic commands ###
